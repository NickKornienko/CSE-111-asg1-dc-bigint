==32438== Memcheck, a memory error detector
==32438== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==32438== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info
==32438== Command: ./ydc
==32438== 
==32438== Invalid read of size 1
==32438==    at 0x40670D: ubigint::divide_by_2() (ubigint.cpp:192)
==32438==    by 0x406A97: udivide(ubigint const&, ubigint const&) (ubigint.cpp:236)
==32438==    by 0x406CEC: ubigint::operator/(ubigint const&) const (ubigint.cpp:247)
==32438==    by 0x40B69D: bigint::operator/(bigint const&) const (bigint.cpp:105)
==32438==    by 0x40E3A2: do_arith(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:35)
==32438==    by 0x40EC86: do_function(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:92)
==32438==    by 0x40F065: main (main.cpp:152)
==32438==  Address 0x5a2e218 is 0 bytes after a block of size 8 alloc'd
==32438==    at 0x4C2B788: operator new(unsigned long) (vg_replace_malloc.c:417)
==32438==    by 0x40AF82: __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*) (new_allocator.h:127)
==32438==    by 0x40A795: allocate (allocator.h:197)
==32438==    by 0x40A795: std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long) (alloc_traits.h:460)
==32438==    by 0x40A227: std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long) (stl_vector.h:346)
==32438==    by 0x4091A5: unsigned char* std::vector<unsigned char, std::allocator<unsigned char> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(unsigned long, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) (stl_vector.h:1511)
==32438==    by 0x407F30: std::vector<unsigned char, std::allocator<unsigned char> >::operator=(std::vector<unsigned char, std::allocator<unsigned char> > const&) (vector.tcc:226)
==32438==    by 0x406531: ubigint::operator*(ubigint const&) const (ubigint.cpp:171)
==32438==    by 0x406604: ubigint::multiply_by_2() (ubigint.cpp:179)
==32438==    by 0x4068FE: udivide(ubigint const&, ubigint const&) (ubigint.cpp:223)
==32438==    by 0x406CEC: ubigint::operator/(ubigint const&) const (ubigint.cpp:247)
==32438==    by 0x40B69D: bigint::operator/(bigint const&) const (bigint.cpp:105)
==32438==    by 0x40E3A2: do_arith(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:35)
==32438== 
==32438== Invalid read of size 1
==32438==    at 0x40670D: ubigint::divide_by_2() (ubigint.cpp:192)
==32438==    by 0x406AE6: udivide(ubigint const&, ubigint const&) (ubigint.cpp:238)
==32438==    by 0x406CEC: ubigint::operator/(ubigint const&) const (ubigint.cpp:247)
==32438==    by 0x40B69D: bigint::operator/(bigint const&) const (bigint.cpp:105)
==32438==    by 0x40E3A2: do_arith(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:35)
==32438==    by 0x40EC86: do_function(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:92)
==32438==    by 0x40F065: main (main.cpp:152)
==32438==  Address 0x5a2e3a3 is 0 bytes after a block of size 3 alloc'd
==32438==    at 0x4C2B788: operator new(unsigned long) (vg_replace_malloc.c:417)
==32438==    by 0x40AF82: __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*) (new_allocator.h:127)
==32438==    by 0x40A795: allocate (allocator.h:197)
==32438==    by 0x40A795: std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long) (alloc_traits.h:460)
==32438==    by 0x40A227: std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long) (stl_vector.h:346)
==32438==    by 0x4091A5: unsigned char* std::vector<unsigned char, std::allocator<unsigned char> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(unsigned long, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) (stl_vector.h:1511)
==32438==    by 0x407F30: std::vector<unsigned char, std::allocator<unsigned char> >::operator=(std::vector<unsigned char, std::allocator<unsigned char> > const&) (vector.tcc:226)
==32438==    by 0x406531: ubigint::operator*(ubigint const&) const (ubigint.cpp:171)
==32438==    by 0x406604: ubigint::multiply_by_2() (ubigint.cpp:179)
==32438==    by 0x406950: udivide(ubigint const&, ubigint const&) (ubigint.cpp:225)
==32438==    by 0x406CEC: ubigint::operator/(ubigint const&) const (ubigint.cpp:247)
==32438==    by 0x40B69D: bigint::operator/(bigint const&) const (bigint.cpp:105)
==32438==    by 0x40E3A2: do_arith(iterstack<bigint, std::vector<bigint, std::allocator<bigint> > >&, char) (main.cpp:35)
==32438== 
==32438== 
==32438== HEAP SUMMARY:
==32438==     in use at exit: 0 bytes in 0 blocks
==32438==   total heap usage: 317 allocs, 317 frees, 4,488 bytes allocated
==32438== 
==32438== All heap blocks were freed -- no leaks are possible
==32438== 
==32438== For lists of detected and suppressed errors, rerun with: -s
==32438== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
