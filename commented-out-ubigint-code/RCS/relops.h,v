head	1.2;
access;
symbols;
locks;
comment	@ * @;


1.2
date	2022.01.11.20.06.50;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.12.28.21.54.01;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@// $Id: relops.h,v 1.1 2021-12-28 13:54:01-08 - - $

//
// Assuming that for any given type T, there are operators
// bool operator< (const T&, const T&);
// bool operator== (const T&, const T&);
// as fundamental comparisons for type T, define the other
// six operators in terms of the basic ones.
//

#ifndef RELOPS_H
#define RELOPS_H

#ifdef TEMPLATE_OPERATOR_NE
template <typename value>
inline bool operator!= (const value& left, const value& right) {
   return not (left == right); 
}
#endif

template <typename value>
inline bool operator>  (const value& left, const value& right) {
   return right < left; 
}

template <typename value>
inline bool operator<= (const value& left, const value& right) {
   return not (right < left);
}

template <typename value>
inline bool operator>= (const value& left, const value& right) {
   return not (left < right); 
}

#endif

@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: relops.h,v 1.2 2021-12-20 12:44:52-08 - - $
d14 1
d19 1
@
